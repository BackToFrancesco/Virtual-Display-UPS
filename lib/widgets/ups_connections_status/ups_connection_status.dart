import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:sizer/sizer.dart';import '../../blocs/ups_connection_handler_bloc/ups_connection_handler_bloc.dart';import '../../config/colors.dart' as app_colors;import '../../repositories/modbus_data_repository/models/modbus_connection_manager/modbus_connection_manager.dart';import '../../utils/translator.dart';import '../dialog/dialog_factory.dart';import '../../widgets/custom_text/custom_text.dart';class UpsConnectionStatusRealTime extends StatelessWidget {  const UpsConnectionStatusRealTime({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    return BlocBuilder<UpsConnectionHandlerBloc, UpsConnectionHandlerState>(        builder: (context, state) {      if (state.upsConnectionStatus == UpsConnectionStatus.connected) {        return _getConnectionStatus(context, app_colors.lightGreen);      } else if (state.upsConnectionStatus ==          UpsConnectionStatus.reconnecting) {        return _getConnectionStatus(context, app_colors.yellow);      } else {        return _getConnectionStatus(context, app_colors.lightRed);      }    });  }  Widget _getConnectionStatus(BuildContext context, Color color) {    return Container(        padding: const EdgeInsets.fromLTRB(14, 14, 14, 0),        child: Row(mainAxisAlignment: MainAxisAlignment.start, children: [          Icon(            Icons.circle,            color: color,            size: 2.2.h,          ),          const SizedBox(width: 5),          GestureDetector(              onTap: () {                DialogFactory.showUpsInfoDialog(context);              },              child: CustomText(                  Translator().translateIfExists('UPS', capitalize: false),                  2.2.h,                  2.2.h,                  bold: true,                  color: app_colors.socomecBlue))        ]));  }}